"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_thirdweb-dev_sdk_dist_multiwrap-be4eeae1_browser_esm_js"],{

/***/ "./node_modules/@thirdweb-dev/sdk/dist/multiwrap-be4eeae1.browser.esm.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/sdk/dist/multiwrap-be4eeae1.browser.esm.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Multiwrap: function() { return /* binding */ Multiwrap; }\n/* harmony export */ });\n/* harmony import */ var _QueryParams_fadca675_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./QueryParams-fadca675.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/QueryParams-fadca675.browser.esm.js\");\n/* harmony import */ var _contract_publisher_a2b0c5c5_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./contract-publisher-a2b0c5c5.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/contract-publisher-a2b0c5c5.browser.esm.js\");\n/* harmony import */ var _erc_721_standard_c390d52b_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./erc-721-standard-c390d52b.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/erc-721-standard-c390d52b.browser.esm.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ethers */ \"./node_modules/ethers/lib.esm/index.js\");\n/* harmony import */ var _hasERC20Allowance_20392145_browser_esm_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./hasERC20Allowance-20392145.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/hasERC20Allowance-20392145.browser.esm.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bn_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tiny-invariant */ \"./node_modules/tiny-invariant/dist/esm/tiny-invariant.js\");\n/* harmony import */ var merkletreejs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! merkletreejs */ \"./node_modules/merkletreejs/dist/index.js\");\n/* harmony import */ var merkletreejs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(merkletreejs__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! fast-deep-equal */ \"./node_modules/fast-deep-equal/index.js\");\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(fast_deep_equal__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! bs58 */ \"./node_modules/bs58/index.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(bs58__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! eventemitter3 */ \"./node_modules/eventemitter3/index.mjs\");\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! cross-fetch */ \"./node_modules/cross-fetch/dist/browser-ponyfill.js\");\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(cross_fetch__WEBPACK_IMPORTED_MODULE_6__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Multiwrap lets you wrap any number of ERC20, ERC721 and ERC1155 tokens you own into a single wrapped token bundle.\n *\n * @example\n *\n * ```javascript\n * import { ThirdwebSDK } from \"@thirdweb-dev/sdk\";\n *\n * const sdk = new ThirdwebSDK(\"{{chainName}}\");\n * const contract = await sdk.getContract(\"{{contract_address}}\", \"multiwrap\");\n * ```\n *\n * @beta\n */\nclass Multiwrap extends _erc_721_standard_c390d52b_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.S {\n  constructor(network, address, storage) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    let abi = arguments.length > 4 ? arguments[4] : undefined;\n    let chainId = arguments.length > 5 ? arguments[5] : undefined;\n    let contractWrapper = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : new _contract_publisher_a2b0c5c5_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.d6(network, address, abi, options, storage);\n    super(contractWrapper, storage, chainId);\n    (0,_QueryParams_fadca675_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, \"abi\", void 0);\n    (0,_QueryParams_fadca675_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, \"encoder\", void 0);\n    (0,_QueryParams_fadca675_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, \"estimator\", void 0);\n    (0,_QueryParams_fadca675_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, \"metadata\", void 0);\n    (0,_QueryParams_fadca675_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, \"app\", void 0);\n    (0,_QueryParams_fadca675_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, \"events\", void 0);\n    (0,_QueryParams_fadca675_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, \"roles\", void 0);\n    /**\n     * Configure royalties\n     * @remarks Set your own royalties for the entire contract or per token\n     * @example\n     * ```javascript\n     * // royalties on the whole contract\n     * contract.royalties.setDefaultRoyaltyInfo({\n     *   seller_fee_basis_points: 100, // 1%\n     *   fee_recipient: \"0x...\"\n     * });\n     * // override royalty for a particular token\n     * contract.royalties.setTokenRoyaltyInfo(tokenId, {\n     *   seller_fee_basis_points: 500, // 5%\n     *   fee_recipient: \"0x...\"\n     * });\n     * ```\n     */\n    (0,_QueryParams_fadca675_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, \"royalties\", void 0);\n    (0,_QueryParams_fadca675_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, \"owner\", void 0);\n    /** ******************************\n     * WRITE FUNCTIONS\n     *******************************/\n    /**\n     * Wrap any number of ERC20/ERC721/ERC1155 tokens into a single wrapped token\n     * @example\n     * ```javascript\n     * const tx = await contract.wrap({\n     *   erc20Tokens: [{\n     *     contractAddress: \"0x...\",\n     *     quantity: \"0.8\"\n     *   }],\n     *   erc721Tokens: [{\n     *     contractAddress: \"0x...\",\n     *     tokenId: \"0\"\n     *   }],\n     *   erc1155Tokens: [{\n     *     contractAddress: \"0x...\",\n     *     tokenId: \"1\",\n     *     quantity: \"2\"\n     *   }]\n     * }, {\n     *     name: \"Wrapped bundle\",\n     *     description: \"This is a wrapped bundle of tokens and NFTs\",\n     *     image: \"ipfs://...\",\n     * });\n     * const receipt = tx.receipt(); // the transaction receipt\n     * const wrappedTokenId = tx.id; // the id of the wrapped token bundle\n     * ```\n     * @param contents - the contents to wrap\n     * @param wrappedTokenMetadata - metadata to represent the wrapped token bundle\n     * @param recipientAddress - Optional. The address to send the wrapped token bundle to\n     */\n    (0,_QueryParams_fadca675_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, \"wrap\", /* @__PURE__ */(0,_contract_publisher_a2b0c5c5_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.dd)(async (contents, wrappedTokenMetadata, recipientAddress) => {\n      const uri = await (0,_contract_publisher_a2b0c5c5_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.dz)(wrappedTokenMetadata, this.storage);\n      const recipient = await (0,_contract_publisher_a2b0c5c5_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.cs)(recipientAddress ? recipientAddress : await this.contractWrapper.getSignerAddress());\n      const tokens = await this.toTokenStructList(contents);\n      return _contract_publisher_a2b0c5c5_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aV.fromContractWrapper({\n        contractWrapper: this.contractWrapper,\n        method: \"wrap\",\n        args: [tokens, uri, recipient],\n        parse: receipt => {\n          const event = this.contractWrapper.parseLogs(\"TokensWrapped\", receipt?.logs);\n          if (event.length === 0) {\n            throw new Error(\"TokensWrapped event not found\");\n          }\n          const tokenId = event[0].args.tokenIdOfWrappedToken;\n          return {\n            id: tokenId,\n            receipt,\n            data: () => this.get(tokenId)\n          };\n        }\n      });\n    }));\n    /**\n     * Unwrap a wrapped token bundle, and retrieve its contents\n     * @example\n     * ```javascript\n     * await contract.unwrap(wrappedTokenId);\n     * ```\n     * @param wrappedTokenId - the id of the wrapped token bundle\n     * @param recipientAddress - Optional. The address to send the unwrapped tokens to\n     */\n    (0,_QueryParams_fadca675_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(this, \"unwrap\", /* @__PURE__ */(0,_contract_publisher_a2b0c5c5_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.dd)(async (wrappedTokenId, recipientAddress) => {\n      const recipient = await (0,_contract_publisher_a2b0c5c5_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.cs)(recipientAddress ? recipientAddress : await this.contractWrapper.getSignerAddress());\n      return _contract_publisher_a2b0c5c5_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aV.fromContractWrapper({\n        contractWrapper: this.contractWrapper,\n        method: \"unwrap\",\n        args: [wrappedTokenId, recipient]\n      });\n    }));\n    this.abi = _contract_publisher_a2b0c5c5_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.e.parse(abi || []);\n    this.metadata = new _contract_publisher_a2b0c5c5_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.ag(this.contractWrapper, _contract_publisher_a2b0c5c5_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.dx, this.storage);\n    this.app = new _contract_publisher_a2b0c5c5_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.a$(this.contractWrapper, this.metadata, this.storage);\n    this.roles = new _contract_publisher_a2b0c5c5_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.ah(this.contractWrapper, Multiwrap.contractRoles);\n    this.encoder = new _contract_publisher_a2b0c5c5_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.af(this.contractWrapper);\n    this.estimator = new _contract_publisher_a2b0c5c5_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aP(this.contractWrapper);\n    this.events = new _contract_publisher_a2b0c5c5_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aQ(this.contractWrapper);\n    this.royalties = new _contract_publisher_a2b0c5c5_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.ai(this.contractWrapper, this.metadata);\n    this.owner = new _contract_publisher_a2b0c5c5_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aU(this.contractWrapper);\n  }\n\n  /** ******************************\n   * READ FUNCTIONS\n   *******************************/\n\n  /**\n   * Get the contents of a wrapped token bundle\n   * @example\n   * ```javascript\n   * const contents = await contract.getWrappedContents(wrappedTokenId);\n   * console.log(contents.erc20Tokens);\n   * console.log(contents.erc721Tokens);\n   * console.log(contents.erc1155Tokens);\n   * ```\n   * @param wrappedTokenId - the id of the wrapped token bundle\n   */\n  async getWrappedContents(wrappedTokenId) {\n    const wrappedTokens = await this.contractWrapper.readContract.getWrappedContents(wrappedTokenId);\n    const erc20Tokens = [];\n    const erc721Tokens = [];\n    const erc1155Tokens = [];\n    for (const token of wrappedTokens) {\n      switch (token.tokenType) {\n        case 0:\n          {\n            const tokenMetadata = await (0,_contract_publisher_a2b0c5c5_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.bc)(this.contractWrapper.getProvider(), token.assetContract);\n            erc20Tokens.push({\n              contractAddress: token.assetContract,\n              quantity: ethers__WEBPACK_IMPORTED_MODULE_10__.utils.formatUnits(token.totalAmount, tokenMetadata.decimals)\n            });\n            break;\n          }\n        case 1:\n          {\n            erc721Tokens.push({\n              contractAddress: token.assetContract,\n              tokenId: token.tokenId\n            });\n            break;\n          }\n        case 2:\n          {\n            erc1155Tokens.push({\n              contractAddress: token.assetContract,\n              tokenId: token.tokenId,\n              quantity: token.totalAmount.toString()\n            });\n            break;\n          }\n      }\n    }\n    return {\n      erc20Tokens,\n      erc721Tokens,\n      erc1155Tokens\n    };\n  }\n  /** ******************************\n   * PRIVATE FUNCTIONS\n   *******************************/\n\n  async toTokenStructList(contents) {\n    const tokens = [];\n    const provider = this.contractWrapper.getProvider();\n    const owner = await this.contractWrapper.getSignerAddress();\n    if (contents.erc20Tokens) {\n      for (const erc20 of contents.erc20Tokens) {\n        const normalizedQuantity = await (0,_contract_publisher_a2b0c5c5_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.bb)(provider, erc20.quantity, erc20.contractAddress);\n        const hasAllowance = await (0,_hasERC20Allowance_20392145_browser_esm_js__WEBPACK_IMPORTED_MODULE_11__.h)(this.contractWrapper, erc20.contractAddress, normalizedQuantity);\n        if (!hasAllowance) {\n          throw new Error(`ERC20 token with contract address \"${erc20.contractAddress}\" does not have enough allowance to transfer.\\n\\nYou can set allowance to the multiwrap contract to transfer these tokens by running:\\n\\nawait sdk.getToken(\"${erc20.contractAddress}\").setAllowance(\"${this.getAddress()}\", ${erc20.quantity});\\n\\n`);\n        }\n        tokens.push({\n          assetContract: erc20.contractAddress,\n          totalAmount: normalizedQuantity,\n          tokenId: 0,\n          tokenType: 0\n        });\n      }\n    }\n    if (contents.erc721Tokens) {\n      for (const erc721 of contents.erc721Tokens) {\n        const isApproved = await (0,_contract_publisher_a2b0c5c5_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.dk)(this.contractWrapper.getProvider(), this.getAddress(), erc721.contractAddress, erc721.tokenId, owner);\n        if (!isApproved) {\n          throw new Error(`ERC721 token \"${erc721.tokenId}\" with contract address \"${erc721.contractAddress}\" is not approved for transfer.\\n\\nYou can give approval the multiwrap contract to transfer this token by running:\\n\\nawait sdk.getNFTCollection(\"${erc721.contractAddress}\").setApprovalForToken(\"${this.getAddress()}\", ${erc721.tokenId});\\n\\n`);\n        }\n        tokens.push({\n          assetContract: erc721.contractAddress,\n          totalAmount: 0,\n          tokenId: erc721.tokenId,\n          tokenType: 1\n        });\n      }\n    }\n    if (contents.erc1155Tokens) {\n      for (const erc1155 of contents.erc1155Tokens) {\n        const isApproved = await (0,_contract_publisher_a2b0c5c5_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.dk)(this.contractWrapper.getProvider(), this.getAddress(), erc1155.contractAddress, erc1155.tokenId, owner);\n        if (!isApproved) {\n          throw new Error(`ERC1155 token \"${erc1155.tokenId}\" with contract address \"${erc1155.contractAddress}\" is not approved for transfer.\\n\\nYou can give approval the multiwrap contract to transfer this token by running:\\n\\nawait sdk.getEdition(\"${erc1155.contractAddress}\").setApprovalForAll(\"${this.getAddress()}\", true);\\n\\n`);\n        }\n        tokens.push({\n          assetContract: erc1155.contractAddress,\n          totalAmount: erc1155.quantity,\n          tokenId: erc1155.tokenId,\n          tokenType: 2\n        });\n      }\n    }\n    return tokens;\n  }\n\n  /**\n   * @internal\n   */\n  async prepare(method, args, overrides) {\n    return _contract_publisher_a2b0c5c5_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.aV.fromContractWrapper({\n      contractWrapper: this.contractWrapper,\n      method,\n      args,\n      overrides\n    });\n  }\n\n  /**\n   * @internal\n   */\n  async call(functionName, args, overrides) {\n    return this.contractWrapper.call(functionName, args, overrides);\n  }\n}\n(0,_QueryParams_fadca675_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__._)(Multiwrap, \"contractRoles\", _contract_publisher_a2b0c5c5_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.dy);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@thirdweb-dev/sdk/dist/multiwrap-be4eeae1.browser.esm.js\n"));

/***/ })

}]);